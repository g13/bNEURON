from ete3 import Tree, TreeStyle, TextFace, add_face_to_node

showQt = True 
soma = Tree()
ts = TreeStyle()
ts.show_leaf_name = True
dend = [Tree() for i in range(199)]

msr = 79
stratum_radiatum = range(msr)
mad = 135
apical_dends = range(mad)
nbd = 135
mbd = 192
basal_dends = range(nbd,mbd)
nas = 192
mas = 199
axon_secs = range(nas,mas)
apical_trunk = [0, 2, 14, 28, 30, 32, 40, 44, 52, 60, 66, 72, 74, 78, 84, 90, 92, 98]
for i in range(199):
    name = str(i)
    if i < msr:
        name = name + '_sr'
    if i < mad:
        name = name + '_ad'
    if i < mbd and i >= nbd:
        name = name + '_bd'
    if i < mas and i >= nas:
        name = name + '_as'
    if i in apical_trunk:
        name = name + '_at'
    dend[i].name = name
        
soma.name = 'soma'
soma.add_child(dend[0])
dend[0].add_child(dend[1])
print(soma.name)
print(soma)
dend[0].add_child(dend[2])
dend[2].add_child(dend[3])
dend[3].add_child(dend[4])
dend[4].add_child(dend[5])
dend[4].add_child(dend[6])
dend[6].add_child(dend[7])
dend[6].add_child(dend[8])
dend[3].add_child(dend[9])
dend[9].add_child(dend[10])
dend[10].add_child(dend[11])
dend[10].add_child(dend[12])
dend[9].add_child(dend[13])
dend[2].add_child(dend[14])
dend[14].add_child(dend[15])
dend[15].add_child(dend[16])
dend[16].add_child(dend[17])
dend[16].add_child(dend[18])
dend[18].add_child(dend[19])
dend[18].add_child(dend[20])
dend[15].add_child(dend[21])
dend[21].add_child(dend[22])
dend[22].add_child(dend[23])
dend[22].add_child(dend[24])
dend[21].add_child(dend[25])
dend[25].add_child(dend[26])
dend[25].add_child(dend[27])
dend[14].add_child(dend[28])
dend[28].add_child(dend[29])
dend[28].add_child(dend[30])
dend[30].add_child(dend[31])
dend[30].add_child(dend[32])
dend[32].add_child(dend[33])
dend[33].add_child(dend[34])
dend[34].add_child(dend[35])
dend[34].add_child(dend[36])
dend[33].add_child(dend[37])
dend[37].add_child(dend[38])
dend[37].add_child(dend[39])
dend[32].add_child(dend[40])
dend[40].add_child(dend[41])
dend[41].add_child(dend[42])
dend[41].add_child(dend[43])
dend[40].add_child(dend[44])
dend[44].add_child(dend[45])
dend[45].add_child(dend[46])
dend[46].add_child(dend[47])
dend[47].add_child(dend[48])
dend[47].add_child(dend[49])
dend[46].add_child(dend[50])
dend[45].add_child(dend[51])
dend[44].add_child(dend[52])
dend[52].add_child(dend[53])
dend[53].add_child(dend[54])
dend[54].add_child(dend[55])
dend[54].add_child(dend[56])
dend[53].add_child(dend[57])
dend[57].add_child(dend[58])
dend[57].add_child(dend[59])
dend[52].add_child(dend[60])
dend[60].add_child(dend[61])
dend[61].add_child(dend[62])
dend[61].add_child(dend[63])
dend[63].add_child(dend[64])
dend[63].add_child(dend[65])
dend[60].add_child(dend[66])
dend[66].add_child(dend[67])
dend[67].add_child(dend[68])
dend[67].add_child(dend[69])
dend[69].add_child(dend[70])
dend[69].add_child(dend[71])
dend[66].add_child(dend[72])
dend[72].add_child(dend[73])
dend[72].add_child(dend[74])
dend[74].add_child(dend[75])
dend[75].add_child(dend[76])
dend[75].add_child(dend[77])
dend[74].add_child(dend[78])
dend[78].add_child(dend[79])
dend[79].add_child(dend[80])
dend[79].add_child(dend[81])
dend[81].add_child(dend[82])
dend[81].add_child(dend[83])
dend[78].add_child(dend[84])
dend[84].add_child(dend[85])
dend[85].add_child(dend[86])
dend[85].add_child(dend[87])
dend[87].add_child(dend[88])
dend[87].add_child(dend[89])
dend[84].add_child(dend[90])
dend[90].add_child(dend[91])
dend[90].add_child(dend[92])
dend[92].add_child(dend[93])
dend[93].add_child(dend[94])
dend[93].add_child(dend[95])
dend[95].add_child(dend[96])
dend[95].add_child(dend[97])
dend[92].add_child(dend[98])
dend[98].add_child(dend[99])
dend[99].add_child(dend[100])
dend[99].add_child(dend[101])
dend[101].add_child(dend[102])
dend[102].add_child(dend[103])
dend[103].add_child(dend[104])
dend[104].add_child(dend[105])
dend[104].add_child(dend[106])
dend[103].add_child(dend[107])
dend[107].add_child(dend[108])
dend[107].add_child(dend[109])
dend[102].add_child(dend[110])
dend[110].add_child(dend[111])
dend[111].add_child(dend[112])
dend[111].add_child(dend[113])
dend[110].add_child(dend[114])
dend[114].add_child(dend[115])
dend[114].add_child(dend[116])
dend[116].add_child(dend[117])
dend[116].add_child(dend[118])
dend[118].add_child(dend[119])
dend[119].add_child(dend[120])
dend[119].add_child(dend[121])
dend[118].add_child(dend[122])
dend[101].add_child(dend[123])
dend[98].add_child(dend[124])
dend[124].add_child(dend[125])
dend[125].add_child(dend[126])
dend[125].add_child(dend[127])
dend[124].add_child(dend[128])
dend[128].add_child(dend[129])
dend[128].add_child(dend[130])
dend[130].add_child(dend[131])
dend[130].add_child(dend[132])
dend[132].add_child(dend[133])
dend[132].add_child(dend[134])
soma.add_child(dend[135])
dend[135].add_child(dend[136])
dend[136].add_child(dend[137])
dend[137].add_child(dend[138])
dend[138].add_child(dend[139])
dend[138].add_child(dend[140])
dend[137].add_child(dend[141])
dend[141].add_child(dend[142])
dend[142].add_child(dend[143])
dend[143].add_child(dend[144])
dend[143].add_child(dend[145])
dend[145].add_child(dend[146])
dend[145].add_child(dend[147])
dend[142].add_child(dend[148])
dend[148].add_child(dend[149])
dend[149].add_child(dend[150])
dend[149].add_child(dend[151])
dend[151].add_child(dend[152])
dend[151].add_child(dend[153])
dend[148].add_child(dend[154])
dend[154].add_child(dend[155])
dend[154].add_child(dend[156])
dend[141].add_child(dend[157])
dend[157].add_child(dend[158])
dend[158].add_child(dend[159])
dend[159].add_child(dend[160])
dend[159].add_child(dend[161])
dend[158].add_child(dend[162])
dend[162].add_child(dend[163])
dend[162].add_child(dend[164])
dend[157].add_child(dend[165])
dend[165].add_child(dend[166])
dend[166].add_child(dend[167])
dend[167].add_child(dend[168])
dend[167].add_child(dend[169])
dend[166].add_child(dend[170])
dend[165].add_child(dend[171])
dend[171].add_child(dend[172])
dend[171].add_child(dend[173])
dend[137].add_child(dend[174])
dend[136].add_child(dend[175])
dend[175].add_child(dend[176])
dend[176].add_child(dend[177])
dend[177].add_child(dend[178])
dend[177].add_child(dend[179])
dend[176].add_child(dend[180])
dend[180].add_child(dend[181])
dend[180].add_child(dend[182])
dend[175].add_child(dend[183])
dend[183].add_child(dend[184])
dend[184].add_child(dend[185])
dend[184].add_child(dend[186])
dend[186].add_child(dend[187])
dend[186].add_child(dend[188])
dend[183].add_child(dend[189])
dend[189].add_child(dend[190])
dend[189].add_child(dend[191])
dend[135].add_child(dend[192])
dend[192].add_child(dend[193])
dend[193].add_child(dend[194])
dend[194].add_child(dend[195])
dend[194].add_child(dend[196])
dend[193].add_child(dend[197])
dend[192].add_child(dend[198])
print(soma.get_ascii(show_internal=True))
def my_layout(node):
        F = TextFace(node.name, tight_text=True)
        add_face_to_node(F, node, column=0, position="branch-top")
ts.layout_fn = my_layout
if showQt:
    soma.show(tree_style=ts)
